// 3375. 使数组的值全部为 K 的最少操作次数
// 给你一个整数数组 nums 和一个整数 k 。

// 如果一个数组中所有 严格大于 h 的整数值都 相等 ，那么我们称整数 h 是 合法的 。

// 比方说，如果 nums = [10, 8, 10, 8] ，那么 h = 9 是一个 合法 整数，因为所有满足 nums[i] > 9 的数都等于 10 ，但是 5 不是 合法 整数。

// 你可以对 nums 执行以下操作：

// 选择一个整数 h ，它对于 当前 nums 中的值是合法的。
// 对于每个下标 i ，如果它满足 nums[i] > h ，那么将 nums[i] 变为 h 。
// 你的目标是将 nums 中的所有元素都变为 k ，请你返回 最少 操作次数。如果无法将所有元素都变 k ，那么返回 -1 。

 
// 方法一：哈希表
class Solution {
    public:
        int minOperations(vector<int>& nums, int k) {
            unordered_set<int> st;
            for(int x:nums){
                if(x < k) return -1;
                else if(x > k) st.insert(x);
            }
            return st.size();
        }
    };

// 注意：题中所表述的全部变为k，代表可以将赋值过程运行很多次，不止有一个合法的h值。
// 最后会换成最小的k值

// 时间复杂度：O(n)，n 表示给定数组 nums 的长度。遍历一遍数组即可，需要的时间为 O(n)。
// 空间复杂度：O(n)，n 表示给定数组 nums 的长度。需要使用哈希表保存已经遍历过的数据，最多需要保存 n 个元素，需要的空间为 O(n)。