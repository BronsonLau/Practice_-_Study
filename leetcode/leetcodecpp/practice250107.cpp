// 3019. 按键变更的次数
// 简单

// 给你一个下标从 0 开始的字符串 s ，该字符串由用户输入。按键变更的定义是：使用与上次使用的按键不同的键。例如 s = "ab" 表示按键变更一次，而 s = "bBBb" 不存在按键变更。
// 返回用户输入过程中按键变更的次数。

// 注意：shift 或 caps lock 等修饰键不计入按键变更，也就是说，如果用户先输入字母 'a' 然后输入字母 'A' ，不算作按键变更。

class Solution {
public:
    int countKeyChanges(string s) {
        int ans = 0;
        for (int i = 1; i < s.size(); ++i) {
            if (tolower(s[i - 1]) != tolower(s[i])) {
                ++ans;
            }
        }
        return ans;
    }
};

// 方法一：一次遍历
// 思路与算法:
// 我们从字符串 s 下标为 1 的字符开始遍历，如果当前遍历到的字符与上一个字符的小写表示不同，说明需要变更一次按键，答案增加 1。



// 复杂度分析:
// 时间复杂度：O(n)，其中 n 是字符串 s 的长度。
// 空间复杂度：O(1)。

